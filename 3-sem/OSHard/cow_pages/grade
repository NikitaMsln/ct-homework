#!/usr/bin/env python3

import re
from gradelib import *

r = Runner(save("xv6.out"))

HEX = "0x[0-9a-f]{16}"

PTE_PRINT = f"""page table {HEX}
 ..0: pte {HEX} pa {HEX}
 .. ..0: pte {HEX} pa {HEX}
 .. .. ..0: pte {HEX} pa {HEX}
 ..255: pte {HEX} pa {HEX}
 .. ..511: pte {HEX} pa {HEX}
 .. .. ..510: pte {HEX} pa {HEX}
 .. .. ..511: pte {HEX} pa {HEX}"""

@test(0, "running cowtest")
def test_cowtest():
    r.run_qemu(shell_script([
        'cowtest'
    ]))

@test(1, "pte exactly once", parent=test_cowtest)
def test_pte_once():
    line = PTE_PRINT.splitlines()[0]
    matches = re.findall(f"^{line}$", r.qemu.output, re.M)
    assert_equal(len(matches), 1, "Number of debug page tables")

@test(1, "pte printout", parent=test_cowtest)
def test_pte():
    [r.match("^{}$".format(l)) for l in PTE_PRINT.splitlines()[1:]]

@test(1, "simple", parent=test_cowtest)
def test_simple():
    matches = re.findall("^simple: ok$", r.qemu.output, re.M)
    assert_equal(len(matches), 2, "Number of appearances of 'simple: ok'")

@test(1, "three", parent=test_cowtest)
def test_three():
    matches = re.findall("^three: ok$", r.qemu.output, re.M)
    assert_equal(len(matches), 3, "Number of appearances of 'three: ok'")

@test(1, "file", parent=test_cowtest)
def test_file():
    r.match("^file: ok$")

@test(1, "ro", parent=test_cowtest)
def test_ro():
    r.match("^ro: ok$")

@test(1, "usertests")
def test_usertests():
    r.run_qemu(shell_script([
        'usertests -q'
    ]), timeout=300)
    r.match('^ALL TESTS PASSED$')

run_tests()
